[tool:pytest]
# Pytest configuration file
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --maxfail=3
    --durations=10
    
# Test discovery
minversion = 6.0
required_plugins = pytest-flask pytest-mock pytest-cov

# Markers
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, external dependencies) 
    e2e: End-to-end tests (slowest, full workflows)
    slow: Tests that take longer to run
    auth: Tests requiring authentication
    redis: Tests requiring Redis connection
    
# Filtering
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    
# Coverage options (when using --cov)
[coverage:run]
source = .
omit = 
    tests/*
    venv/*
    env/*
    .env/*
    */migrations/*
    */venv/*
    */virtualenv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    class.*\(Protocol\):
    @(abc\.)?abstractmethod